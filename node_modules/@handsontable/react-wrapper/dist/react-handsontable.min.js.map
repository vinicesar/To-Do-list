{"version":3,"file":"react-handsontable.min.js","sources":["../src/helpers.tsx","../src/settingsMapper.ts","../src/hotTableContext.tsx","../src/hotColumnContext.tsx","../src/hotEditor.tsx","../src/hotColumn.tsx","../src/renderersPortalManager.tsx","../../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js","../../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js","../src/hotTableInner.tsx","../src/hotTable.tsx"],"sourcesContent":["import React, {\n  ComponentType,\n  CSSProperties,\n  DependencyList,\n  EffectCallback,\n  ReactNode,\n  ReactPortal,\n  useEffect,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport { HotTableProps } from './types';\n\nlet bulkComponentContainer: DocumentFragment | null = null;\n\n/**\n * Warning message for the `autoRowSize`/`autoColumnSize` compatibility check.\n */\nexport const AUTOSIZE_WARNING = 'Your `HotTable` configuration includes `autoRowSize`/`autoColumnSize` options, which are not compatible with ' +\n  ' the component-based renderers`. Disable `autoRowSize` and `autoColumnSize` to prevent row and column misalignment.';\n\n/**\n * Warning message for the `hot-renderer` obsolete renderer passing method.\n */\nexport const OBSOLETE_HOTRENDERER_WARNING = 'Providing a component-based renderer using `hot-renderer`-annotated component is no longer supported. ' +\n  'Pass your component using `renderer` prop of the `HotTable` or `HotColumn` component instead.';\n\n/**\n * Warning message for the `hot-editor` obsolete editor passing method.\n */\nexport const OBSOLETE_HOTEDITOR_WARNING = 'Providing a component-based editor using `hot-editor`-annotated component is no longer supported. ' +\n  'Pass your component using `editor` prop of the `HotTable` or `HotColumn` component instead.';\n\n/**\n * Warning message for the unexpected children of HotTable component.\n */\nexport const UNEXPECTED_HOTTABLE_CHILDREN_WARNING = 'Unexpected children nodes found in HotTable component. ' +\n    'Only HotColumn components are allowed.';\n\n/**\n * Warning message for the unexpected children of HotColumn component.\n */\nexport const UNEXPECTED_HOTCOLUMN_CHILDREN_WARNING = 'Unexpected children nodes found in HotColumn component. ' +\n    'HotColumn components do not support any children.';\n\n/**\n * Message for the warning thrown if the Handsontable instance has been destroyed.\n */\nexport const HOT_DESTROYED_WARNING = 'The Handsontable instance bound to this component was destroyed and cannot be' +\n  ' used properly.';\n\n/**\n * Default classname given to the wrapper container.\n */\nexport const DEFAULT_CLASSNAME = 'hot-wrapper-editor-container';\n\n/**\n * Logs warn to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function warn(...args: any[]) {\n  if (typeof console !== 'undefined') {\n    console.warn(...args);\n  }\n}\n\n/**\n * Detect if `hot-renderer` or `hot-editor` is defined, and if so, throw an incompatibility warning.\n *\n * @returns {boolean} 'true' if the warning was issued\n */\nexport function displayObsoleteRenderersEditorsWarning(children: ReactNode): boolean {\n  if (hasChildElementOfType(children, 'hot-renderer')) {\n    warn(OBSOLETE_HOTRENDERER_WARNING);\n    return true;\n  }\n  if (hasChildElementOfType(children, 'hot-editor')) {\n    warn(OBSOLETE_HOTEDITOR_WARNING);\n    return true;\n  }\n\n  return false\n}\n\n/**\n * Detect if children of specified type are defined, and if so, throw an incompatibility warning.\n *\n * @param {ReactNode} children Component children nodes\n * @param {ComponentType} Component Component type to check\n * @returns {boolean} 'true' if the warning was issued\n */\nexport function displayChildrenOfTypeWarning(children: ReactNode, Component: ComponentType): boolean {\n  const childrenArray: ReactNode[] = React.Children.toArray(children);\n\n  if (childrenArray.some((child) => (child as React.ReactElement).type !== Component)) {\n    warn(UNEXPECTED_HOTTABLE_CHILDREN_WARNING);\n    return true;\n  }\n\n  return false\n}\n\n/**\n * Detect if children is defined, and if so, throw an incompatibility warning.\n *\n * @param {ReactNode} children Component children nodes\n * @returns {boolean} 'true' if the warning was issued\n */\nexport function displayAnyChildrenWarning(children: ReactNode): boolean {\n  const childrenArray: ReactNode[] = React.Children.toArray(children);\n\n  if (childrenArray.length) {\n    warn(UNEXPECTED_HOTCOLUMN_CHILDREN_WARNING);\n    return true;\n  }\n\n  return false\n}\n\n/**\n * Check the existence of elements of the provided `type` from the `HotColumn` component's children.\n *\n * @param {ReactNode} children HotTable children array.\n * @param {String} type Either `'hot-renderer'` or `'hot-editor'`.\n * @returns {boolean} `true` if the child of that type was found, `false` otherwise.\n */\nfunction hasChildElementOfType(children: ReactNode, type: 'hot-renderer' | 'hot-editor'): boolean {\n  const childrenArray: ReactNode[] = React.Children.toArray(children);\n\n  return childrenArray.some((child) => {\n      return (child as React.ReactElement).props[type] !== void 0;\n  });\n}\n\n/**\n * Create an editor portal.\n *\n * @param {Document} doc Document to be used.\n * @param {ComponentType} Editor Editor component or render function.\n * @returns {ReactPortal} The portal for the editor.\n */\nexport function createEditorPortal(doc: Document | null, Editor: HotTableProps['editor'] | undefined | boolean): ReactPortal | null {\n  if (!doc || !Editor || typeof Editor === 'boolean') {\n    return null;\n  }\n\n  const editorElement = <Editor />;\n  const containerProps = getContainerAttributesProps({}, false);\n\n  containerProps.className = `${DEFAULT_CLASSNAME} ${containerProps.className}`;\n\n  return ReactDOM.createPortal(\n    <div {...containerProps}>\n      {editorElement}\n    </div>\n    , doc.body);\n}\n\n/**\n * Render a cell component to an external DOM node.\n *\n * @param {React.ReactElement} rElement React element to be used as a base for the component.\n * @param {Document} [ownerDocument] The owner document to set the portal up into.\n * @param {String} portalKey The key to be used for the portal.\n * @param {HTMLElement} [cachedContainer] The cached container to be used for the portal.\n * @returns {{portal: ReactPortal, portalContainer: HTMLElement}} An object containing the portal and its container.\n */\nexport function createPortal(rElement: React.ReactElement, ownerDocument: Document | null = document, portalKey: string, cachedContainer?: HTMLElement): {\n  portal: ReactPortal,\n  portalContainer: HTMLElement,\n} {\n  if (!ownerDocument) {\n    ownerDocument = document;\n  }\n\n  if (!bulkComponentContainer) {\n    bulkComponentContainer = ownerDocument.createDocumentFragment();\n  }\n\n  const portalContainer = cachedContainer ?? ownerDocument.createElement('DIV');\n  bulkComponentContainer.appendChild(portalContainer);\n\n  return {\n    portal: ReactDOM.createPortal(rElement, portalContainer, portalKey),\n    portalContainer\n  };\n}\n\n/**\n * Get an object containing the `id`, `className` and `style` keys, representing the corresponding props passed to the\n * component.\n *\n * @param {HotTableProps} props Object containing the React element props.\n * @param {Boolean} randomizeId If set to `true`, the function will randomize the `id` property when no `id` was present in the `prop` object.\n * @returns An object containing the `id`, `className` and `style` keys, representing the corresponding props passed to the\n * component.\n */\nexport function getContainerAttributesProps(props: HotTableProps, randomizeId: boolean = true): {id?: string, className: string, style: CSSProperties} {\n  return {\n    id: props.id || (randomizeId ? 'hot-' + Math.random().toString(36).substring(5) : undefined),\n    className: props.className || '',\n    style: props.style || {},\n  };\n}\n\n/**\n * Checks if the environment that the code runs in is a browser.\n *\n * @returns {boolean}\n */\nexport function isCSR(): boolean {\n  return typeof window !== 'undefined';\n}\n\n/**\n * A variant of useEffect hook that does not trigger on initial mount, only updates\n *\n * @param effect Effect function\n * @param deps Effect dependencies\n */\nexport function useUpdateEffect(effect: EffectCallback, deps?: DependencyList): void {\n  const notInitialRender = React.useRef(false);\n\n  useEffect(() => {\n    if (notInitialRender.current) {\n      return effect();\n    } else {\n      notInitialRender.current = true;\n    }\n  }, deps);\n}\n","import Handsontable from 'handsontable/base';\nimport { HotTableProps } from './types';\n\nexport class SettingsMapper {\n  /**\n   * Parse component settings into Handsontable-compatible settings.\n   *\n   * @param {Object} properties Object containing properties from the HotTable object.\n   * @param {Object} additionalSettings Additional settings.\n   * @param {boolean} additionalSettings.isInit Flag determining whether the settings are being set during initialization.\n   * @param {string[]} additionalSettings.initOnlySettingKeys Array of keys that can be set only during initialization.\n   * @returns {Object} Handsontable-compatible settings object.\n   */\n  static getSettings(\n    properties: HotTableProps,\n    {\n      prevProps = {},\n      isInit = false,\n      initOnlySettingKeys = []\n    }: {\n      prevProps?: HotTableProps;\n      isInit?: boolean;\n      initOnlySettingKeys?: Array<keyof Handsontable.GridSettings>\n    } = {}): Handsontable.GridSettings {\n    const shouldSkipProp = (key: keyof Handsontable.GridSettings) => {\n      // Omit settings that can be set only during initialization and are intentionally modified.\n      if (!isInit && initOnlySettingKeys.includes(key)) {\n        return prevProps[key] === properties[key];\n      }\n      return false;\n    };\n    let newSettings: Handsontable.GridSettings = {};\n\n    for (const key in properties) {\n      if (\n        key !== 'children' &&\n        !shouldSkipProp(key as keyof Handsontable.GridSettings) &&\n        properties.hasOwnProperty(key)\n      ) {\n        (newSettings as any)[key] = properties[key as keyof HotTableProps];\n      }\n    }\n\n    return newSettings;\n  }\n}\n","import Handsontable from 'handsontable/base';\nimport React, {\n  ComponentType,\n  FC,\n  PropsWithChildren,\n  ReactPortal,\n  createContext,\n  useCallback,\n  useRef,\n  useMemo,\n  useContext,\n} from 'react';\nimport { ScopeIdentifier, HotRendererProps } from './types'\nimport { createPortal } from './helpers'\nimport { RenderersPortalManagerRef } from './renderersPortalManager'\n\nexport interface HotTableContextImpl {\n  /**\n   * Map with column indexes (or a string = 'global') as keys, and booleans as values. Each key represents a component-based editor\n   * declared for the used column index, or a global one, if the key is the `global` string.\n   */\n  readonly componentRendererColumns: Map<ScopeIdentifier, boolean>;\n\n  /**\n   * Array of object containing the column settings.\n   */\n  readonly columnsSettings: Handsontable.ColumnSettings[];\n\n  /**\n   * Sets the column settings based on information received from HotColumn.\n   *\n   * @param {HotTableProps} columnSettings Column settings object.\n   * @param {Number} columnIndex Column index.\n   */\n  readonly emitColumnSettings: (columnSettings: Handsontable.ColumnSettings, columnIndex: number) => void;\n\n  /**\n   * Return a renderer wrapper function for the provided renderer component.\n   *\n   * @param {ComponentType<HotRendererProps>} Renderer React renderer component.\n   * @returns {Handsontable.renderers.BaseRenderer} The Handsontable rendering function.\n   */\n  readonly getRendererWrapper: (Renderer: ComponentType<HotRendererProps>) => typeof Handsontable.renderers.BaseRenderer;\n\n  /**\n   * Clears portals cache.\n   */\n  readonly clearPortalCache: () => void;\n\n  /**\n   * Clears rendered cells cache.\n   */\n  readonly clearRenderedCellCache: () => void;\n\n  /**\n   * Set the renderers portal manager dispatch function.\n   *\n   * @param {RenderersPortalManagerRef} pm The PortalManager dispatch function.\n   */\n  readonly setRenderersPortalManagerRef: (pm: RenderersPortalManagerRef) => void;\n\n  /**\n   * Puts cell portals into portal manager and purges portals cache.\n   */\n  readonly pushCellPortalsIntoPortalManager: () => void;\n}\n\nconst HotTableContext = createContext<HotTableContextImpl | undefined>(undefined);\n\nconst HotTableContextProvider: FC<PropsWithChildren> = ({ children }) => {\n  const columnsSettings = useRef<Handsontable.ColumnSettings[]>([]);\n\n  const setHotColumnSettings = useCallback((columnSettings: Handsontable.ColumnSettings, columnIndex: number) => {\n    columnsSettings.current[columnIndex] = columnSettings;\n  }, [])\n\n  const componentRendererColumns = useRef<Map<number | 'global', boolean>>(new Map());\n  const renderedCellCache = useRef<Map<string, HTMLTableCellElement>>(new Map());\n  const clearRenderedCellCache = useCallback(() => renderedCellCache.current.clear(), []);\n  const portalCache = useRef<Map<string, ReactPortal>>(new Map());\n  const clearPortalCache = useCallback(() => portalCache.current.clear(), []);\n  const portalContainerCache = useRef<Map<string, HTMLElement>>(new Map());\n\n  const getRendererWrapper = useCallback((Renderer: ComponentType<HotRendererProps>): typeof Handsontable.renderers.BaseRenderer => {\n    return function __internalRenderer(instance, TD, row, col, prop, value, cellProperties) {\n      const key = `${row}-${col}`;\n\n      // Handsontable.Core type is missing guid\n      const instanceGuid = (instance as unknown as { guid: string }).guid;\n\n      const portalContainerKey = `${instanceGuid}-${key}`\n      const portalKey = `${key}-${instanceGuid}`\n\n      if (renderedCellCache.current.has(key)) {\n        TD.innerHTML = renderedCellCache.current.get(key)!.innerHTML;\n      }\n\n      if (TD && !TD.getAttribute('ghost-table')) {\n        const cachedPortal = portalCache.current.get(portalKey);\n        const cachedPortalContainer = portalContainerCache.current.get(portalContainerKey);\n\n        while (TD.firstChild) {\n          TD.removeChild(TD.firstChild);\n        }\n\n        // if portal already exists, do not recreate\n        if (cachedPortal && cachedPortalContainer) {\n          TD.appendChild(cachedPortalContainer);\n        } else {\n          const rendererElement = (\n            <Renderer instance={instance}\n                      TD={TD}\n                      row={row}\n                      col={col}\n                      prop={prop}\n                      value={value}\n                      cellProperties={cellProperties}/>\n          );\n\n          const {portal, portalContainer} = createPortal(rendererElement, TD.ownerDocument, portalKey, cachedPortalContainer);\n\n          portalContainerCache.current.set(portalContainerKey, portalContainer);\n          TD.appendChild(portalContainer);\n\n          portalCache.current.set(portalKey, portal);\n        }\n      }\n\n      renderedCellCache.current.set(`${row}-${col}`, TD);\n      return TD;\n    };\n  }, []);\n\n  const renderersPortalManager = useRef<RenderersPortalManagerRef>(() => undefined);\n\n  const setRenderersPortalManagerRef = useCallback((pmComponent: RenderersPortalManagerRef) => {\n    renderersPortalManager.current = pmComponent;\n  }, []);\n\n  const pushCellPortalsIntoPortalManager = useCallback(() => {\n    renderersPortalManager.current!([...portalCache.current.values()]);\n  }, []);\n\n  const contextImpl: HotTableContextImpl = useMemo(() => ({\n    componentRendererColumns: componentRendererColumns.current,\n    columnsSettings: columnsSettings.current,\n    emitColumnSettings: setHotColumnSettings,\n    getRendererWrapper,\n    clearPortalCache,\n    clearRenderedCellCache,\n    setRenderersPortalManagerRef,\n    pushCellPortalsIntoPortalManager\n  }), [setHotColumnSettings, getRendererWrapper, clearRenderedCellCache, setRenderersPortalManagerRef, pushCellPortalsIntoPortalManager]);\n\n  return (\n    <HotTableContext.Provider value={contextImpl}>{children}</HotTableContext.Provider>\n  );\n};\n\n/**\n * Exposes the table context object to components\n *\n * @returns HotTableContext\n */\nfunction useHotTableContext(): HotTableContextImpl {\n  return useContext(HotTableContext)!;\n}\n\nexport { HotTableContextProvider, useHotTableContext };\n","import React, {\n  FC,\n  PropsWithChildren,\n  createContext,\n  useContext,\n  useMemo,\n} from 'react';\n\nexport interface HotColumnContextImpl {\n  /**\n   * Column index within a HotTable.\n   */\n  readonly columnIndex: number;\n\n  /**\n   * Get the `Document` object corresponding to the main component element.\n   *\n   * @returns The `Document` object used by the component.\n   */\n  readonly getOwnerDocument: () => Document | null;\n}\n\nconst HotColumnContext = createContext<HotColumnContextImpl | undefined>(undefined);\n\nconst HotColumnContextProvider: FC<PropsWithChildren<HotColumnContextImpl>> = ({ columnIndex, getOwnerDocument, children }) => {\n\n  const contextImpl: HotColumnContextImpl = useMemo(() => ({\n    columnIndex,\n    getOwnerDocument\n  }), [columnIndex, getOwnerDocument]);\n\n  return (\n    <HotColumnContext.Provider value={contextImpl}>{children}</HotColumnContext.Provider>\n  );\n};\n\nconst useHotColumnContext = () => useContext(HotColumnContext)!;\n\nexport { useHotColumnContext, HotColumnContextProvider };\n","import React, {\n  DependencyList,\n  FC,\n  MutableRefObject,\n  ReactNode,\n  Ref,\n  RefObject,\n  createContext,\n  useContext,\n  useDeferredValue,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport Handsontable from 'handsontable/base';\nimport { HotEditorHooks, UseHotEditorImpl } from './types';\n\ntype HookPropName = keyof Handsontable.editors.BaseEditor | 'constructor';\n\nconst AbstractMethods: (keyof Handsontable.editors.BaseEditor)[] = [\n  'close',\n  'focus',\n  'open',\n];\nconst ExcludedMethods: (keyof Handsontable.editors.BaseEditor)[] = [\n  'getValue',\n  'setValue',\n];\n\nconst MethodsMap: Partial<\n  Record<keyof Handsontable.editors.BaseEditor, keyof HotEditorHooks>\n> = {\n  open: 'onOpen',\n  close: 'onClose',\n  prepare: 'onPrepare',\n  focus: 'onFocus',\n};\n\n/**\n * Create a class to be passed to the Handsontable's settings.\n *\n * @param {RefObject<HotEditorHooks>} hooksRef Reference to component-based editor overridden hooks object.\n * @param {RefObject} instanceRef Reference to Handsontable-native custom editor class instance.\n * @returns {Function} A class to be passed to the Handsontable editor settings.\n */\nexport function makeEditorClass(\n  hooksRef: MutableRefObject<HotEditorHooks | null>,\n  instanceRef: MutableRefObject<Handsontable.editors.BaseEditor | null>\n): typeof Handsontable.editors.BaseEditor {\n  return class CustomEditor\n    extends Handsontable.editors.BaseEditor\n    implements Handsontable.editors.BaseEditor\n  {\n    private value: any;\n\n    constructor(hotInstance: Handsontable.Core) {\n      super(hotInstance);\n      instanceRef.current = this;\n\n      (\n        Object.getOwnPropertyNames(\n          Handsontable.editors.BaseEditor.prototype\n        ) as HookPropName[]\n      ).forEach((propName) => {\n        if (propName === 'constructor' || ExcludedMethods.includes(propName)) {\n          return;\n        }\n\n        const baseMethod = Handsontable.editors.BaseEditor.prototype[propName];\n        (CustomEditor.prototype as any)[propName] = function (\n          this: CustomEditor,\n          ...args: any[]\n        ) {\n          let result;\n\n          if (!AbstractMethods.includes(propName)) {\n            result = baseMethod.call(this, ...args); // call super\n          }\n\n          if (\n            MethodsMap[propName] &&\n            hooksRef.current?.[MethodsMap[propName]!]\n          ) {\n            result = (hooksRef.current[MethodsMap[propName]!] as any).call(\n              this,\n              ...args\n            );\n          }\n\n          return result;\n        }.bind(this);\n      });\n    }\n\n    focus() {}\n\n    getValue() {\n      return this.value;\n    }\n\n    setValue(newValue: any) {\n      this.value = newValue;\n    }\n\n    open() {}\n\n    close() {}\n  };\n}\n\ninterface EditorContextType {\n  hooksRef: Ref<HotEditorHooks>;\n  hotCustomEditorInstanceRef: RefObject<Handsontable.editors.BaseEditor>;\n}\n\n/**\n * Context to provide Handsontable-native custom editor class instance to overridden hooks object.\n */\nconst EditorContext = createContext<EditorContextType | undefined>(\n  undefined\n);\n\ninterface EditorContextProviderProps {\n  hooksRef: Ref<HotEditorHooks>;\n  hotCustomEditorInstanceRef: RefObject<Handsontable.editors.BaseEditor>;\n  children: ReactNode;\n}\n\n/**\n * Provider of the context that exposes Handsontable-native editor instance and passes hooks object\n * for custom editor components.\n *\n * @param {Ref} hooksRef Reference for component-based editor overridden hooks object.\n * @param {RefObject} hotCustomEditorInstanceRef  Reference to Handsontable-native editor instance.\n */\nexport const EditorContextProvider: FC<EditorContextProviderProps> = ({\n  hooksRef,\n  hotCustomEditorInstanceRef,\n  children,\n}) => {\n  return (\n    <EditorContext.Provider value={{ hooksRef, hotCustomEditorInstanceRef }}>\n      {children}\n    </EditorContext.Provider>\n  );\n};\n\n/**\n * Hook that allows encapsulating custom behaviours of component-based editor by customizing passed ref with overridden hooks object.\n *\n * @param {HotEditorHooks} overriddenHooks Overrides specific for the custom editor.\n * @param {DependencyList} deps Overridden hooks object React dependency list.\n * @returns {UseHotEditorImpl} Editor API methods\n */\nexport function useHotEditor<T>(\n  overriddenHooks?: HotEditorHooks,\n  deps?: DependencyList\n): UseHotEditorImpl<T> {\n  const { hooksRef, hotCustomEditorInstanceRef } =\n    useContext(EditorContext)!;\n  const [rerenderTrigger, setRerenderTrigger] = useState(0);\n  const [editorValue, setEditorValue] = useState<T>();\n\n  // return a deferred value that allows for optimizing performance by delaying the update of a value until the next render.\n  const deferredValue = useDeferredValue(editorValue);\n\n  useImperativeHandle(\n    hooksRef,\n    () => ({\n      ...overriddenHooks,\n      onOpen() {\n        setEditorValue(hotCustomEditorInstanceRef.current?.getValue());\n        overriddenHooks?.onOpen?.();\n        setRerenderTrigger((t) => t + 1);\n      },\n    }),\n    deps\n  );\n\n  return useMemo(\n    () => ({\n      get value(): T | undefined {\n        return deferredValue;\n      },\n      setValue(newValue) {\n        setEditorValue(newValue);\n        hotCustomEditorInstanceRef.current?.setValue(newValue);\n      },\n      get isOpen() {\n        return hotCustomEditorInstanceRef.current?.isOpened() ?? false;\n      },\n      finishEditing() {\n        hotCustomEditorInstanceRef.current?.finishEditing();\n      },\n      get row() {\n        return hotCustomEditorInstanceRef.current?.row;\n      },\n      get col() {\n        return hotCustomEditorInstanceRef.current?.col;\n      },\n    }),\n    [rerenderTrigger, hotCustomEditorInstanceRef, deferredValue]\n  );\n}\n","import React, {\n  FC,\n  ReactElement,\n  useEffect,\n  useRef,\n} from 'react';\nimport { HotTableProps, HotColumnProps, HotEditorHooks } from './types';\nimport {\n  createEditorPortal,\n  displayAnyChildrenWarning,\n  displayObsoleteRenderersEditorsWarning\n} from './helpers';\nimport { SettingsMapper } from './settingsMapper';\nimport Handsontable from 'handsontable/base';\nimport { useHotTableContext } from './hotTableContext'\nimport { useHotColumnContext } from './hotColumnContext'\nimport { EditorContextProvider, makeEditorClass } from './hotEditor';\n\nconst isHotColumn = (childNode: any): childNode is ReactElement => childNode.type === HotColumn;\n\nconst internalProps = ['_columnIndex', '_getOwnerDocument', 'children'];\n\nconst HotColumn: FC<HotColumnProps> = (props) => {\n  const { componentRendererColumns, emitColumnSettings, getRendererWrapper } = useHotTableContext();\n  const { columnIndex, getOwnerDocument } = useHotColumnContext();\n\n  /**\n   * Reference to component-based editor overridden hooks object.\n   */\n  const localEditorHooksRef = useRef<HotEditorHooks | null>(null);\n\n  /**\n   * Reference to HOT-native custom editor class instance.\n   */\n  const localEditorClassInstance = useRef<Handsontable.editors.BaseEditor | null>(null);\n\n  /**\n   * Logic performed after mounting & updating of the HotColumn component.\n   */\n  useEffect(() => {\n\n    /**\n     * Filter out all the internal properties and return an object with just the Handsontable-related props.\n     *\n     * @returns {Object}\n     */\n    const getSettingsProps = (): HotTableProps => {\n      return Object.keys(props)\n        .filter(key => !internalProps.includes(key))\n        .reduce<HotTableProps>((obj, key) => {\n          (obj as any)[key] = props[key];\n          return obj;\n        }, {});\n    };\n\n    /**\n     * Create the column settings based on the data provided to the `HotColumn` component and its child components.\n     */\n    const createColumnSettings = (): Handsontable.ColumnSettings => {\n      const columnSettings = SettingsMapper.getSettings(getSettingsProps()) as unknown as Handsontable.ColumnSettings;\n\n      if (props.renderer) {\n        columnSettings.renderer = getRendererWrapper(props.renderer);\n        componentRendererColumns.set(columnIndex, true);\n      } else if (props.hotRenderer) {\n        columnSettings.renderer = props.hotRenderer;\n      }\n\n      if (props.editor) {\n        columnSettings.editor = makeEditorClass(localEditorHooksRef, localEditorClassInstance);\n      } else if (props.hotEditor) {\n        columnSettings.editor = props.hotEditor;\n      }\n\n      return columnSettings\n    };\n\n    const columnSettings = createColumnSettings();\n    emitColumnSettings(columnSettings, columnIndex);\n\n    if (!displayObsoleteRenderersEditorsWarning(props.children)) {\n      displayAnyChildrenWarning(props.children);\n    }\n  });\n\n  const editorPortal = createEditorPortal(getOwnerDocument(), props.editor);\n\n  /**\n   * Render the portals of the editors, if there are any.\n   *\n   * @returns {ReactElement}\n   */\n  return (\n    <EditorContextProvider hooksRef={localEditorHooksRef}\n                           hotCustomEditorInstanceRef={localEditorClassInstance}>\n      {editorPortal}\n    </EditorContextProvider>\n  )\n}\n\nexport { HotColumn, isHotColumn };\n","import React, {\n  Dispatch,\n  ReactPortal,\n  forwardRef,\n  Fragment,\n  useImperativeHandle,\n  useState,\n} from 'react';\n\nexport type RenderersPortalManagerRef = Dispatch<ReactPortal[]>;\n\n/**\n * Component used to manage the renderer component portals.\n */\nexport const RenderersPortalManager = forwardRef<RenderersPortalManagerRef, {}>((_, ref) => {\n  const [portals, setPortals] = useState<ReactPortal[]>([]);\n  useImperativeHandle(ref, () => setPortals);\n\n  return (\n      <Fragment>\n        {portals}\n      </Fragment>\n  );\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React, {\n  Children,\n  Fragment,\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  forwardRef\n} from 'react';\nimport Handsontable from 'handsontable/base';\nimport { SettingsMapper } from './settingsMapper';\nimport { RenderersPortalManager } from './renderersPortalManager';\nimport { HotColumn, isHotColumn } from './hotColumn';\nimport { HotEditorHooks, HotTableProps, HotTableRef } from './types';\nimport {\n  HOT_DESTROYED_WARNING,\n  AUTOSIZE_WARNING,\n  createEditorPortal,\n  getContainerAttributesProps,\n  isCSR,\n  warn,\n  displayObsoleteRenderersEditorsWarning,\n  useUpdateEffect,\n  displayChildrenOfTypeWarning\n} from './helpers';\nimport PropTypes from 'prop-types';\nimport { getRenderer } from 'handsontable/renderers/registry';\nimport { getEditor } from 'handsontable/editors/registry';\nimport { useHotTableContext } from './hotTableContext'\nimport { HotColumnContextProvider } from './hotColumnContext'\nimport { EditorContextProvider, makeEditorClass } from './hotEditor';\n\nconst HotTableInner = forwardRef<\n  HotTableRef,\n  HotTableProps\n>((props, ref) => {\n\n  /**\n   * Reference to the Handsontable instance.\n   */\n  const __hotInstance = useRef<Handsontable | null>(null);\n\n  /**\n   * Reference to the main Handsontable DOM element.\n   */\n  const hotElementRef = useRef<HTMLDivElement>(null);\n\n  /**\n   * Reference to component-based editor overridden hooks object.\n   */\n  const globalEditorHooksRef = useRef<HotEditorHooks | null>(null);\n\n  /**\n   * Reference to HOT-native custom editor class instance.\n   */\n  const globalEditorClassInstance = useRef<Handsontable.editors.BaseEditor | null>(null);\n\n  /**\n   * Reference to the previous props object.\n   */\n  const prevProps = useRef<HotTableProps>();\n\n  /**\n   * HotTable context exposing helper functions.\n   */\n  const context = useHotTableContext();\n\n  /**\n   * Getter for the property storing the Handsontable instance.\n   */\n  const getHotInstance = useCallback((): Handsontable | null => {\n    if (!__hotInstance.current || !__hotInstance.current.isDestroyed) {\n\n      // Will return the Handsontable instance or `null` if it's not yet been created.\n      return __hotInstance.current;\n\n    } else {\n      console.warn(HOT_DESTROYED_WARNING);\n\n      return null;\n    }\n  }, [__hotInstance]);\n\n  const isHotInstanceDestroyed = useCallback((): boolean => {\n    return !__hotInstance.current || __hotInstance.current.isDestroyed;\n  }, [__hotInstance]);\n\n  /**\n   * Clear both the editor and the renderer cache.\n   */\n  const clearCache = useCallback((): void => {\n    context.clearRenderedCellCache();\n    context.componentRendererColumns.clear();\n  }, [context]);\n\n  /**\n   * Get the `Document` object corresponding to the main component element.\n   *\n   * @returns The `Document` object used by the component.\n   */\n  const getOwnerDocument = useCallback((): Document | null => {\n    if (isCSR()) {\n      return hotElementRef.current ? hotElementRef.current.ownerDocument : document;\n    }\n\n    return null;\n  }, [hotElementRef]);\n\n  /**\n   * Create a new settings object containing the column settings and global editors and renderers.\n   *\n   * @returns {Handsontable.GridSettings} New global set of settings for Handsontable.\n   */\n  const createNewGlobalSettings = (init: boolean = false, prevProps: HotTableProps = {}): Handsontable.GridSettings => {\n    const initOnlySettingKeys = !isHotInstanceDestroyed() ? // Needed for React's double-rendering.\n      ((getHotInstance()?.getSettings() as any)?._initOnlySettings || []) :\n      [];\n    const newSettings = SettingsMapper.getSettings(\n      props, {\n        prevProps,\n        isInit: init,\n        initOnlySettingKeys\n      }\n    );\n\n    newSettings.columns = context.columnsSettings.length ? context.columnsSettings : newSettings.columns;\n\n    if (props.renderer) {\n      newSettings.renderer = context.getRendererWrapper(props.renderer);\n      context.componentRendererColumns.set('global', true);\n    } else {\n      newSettings.renderer = props.hotRenderer || getRenderer('text');\n    }\n\n    if (props.editor) {\n      newSettings.editor = makeEditorClass(globalEditorHooksRef, globalEditorClassInstance);\n    } else {\n      newSettings.editor = props.hotEditor || getEditor('text');\n    }\n\n    return newSettings;\n  };\n\n  /**\n   * Detect if `autoRowSize` or `autoColumnSize` is defined, and if so, throw an incompatibility warning.\n   */\n  const displayAutoSizeWarning = (hotInstance: Handsontable | null): void => {\n    if (\n      hotInstance &&\n      (\n        hotInstance.getPlugin('autoRowSize')?.enabled ||\n        hotInstance.getPlugin('autoColumnSize')?.enabled\n      )\n    ) {\n      if (context.componentRendererColumns.size > 0) {\n        warn(AUTOSIZE_WARNING);\n      }\n    }\n  };\n\n  /**\n   * Initialize Handsontable after the component has mounted.\n   */\n  useEffect(() => {\n    const newGlobalSettings = createNewGlobalSettings(true);\n\n    // Update prevProps with the current props\n    prevProps.current = props;\n\n    __hotInstance.current = new Handsontable.Core(hotElementRef.current!, newGlobalSettings);\n\n    /**\n     * Handsontable's `beforeViewRender` hook callback.\n     */\n    __hotInstance.current.addHook('beforeViewRender', () => {\n      context.clearPortalCache();\n      context.clearRenderedCellCache();\n    });\n\n    /**\n     * Handsontable's `afterViewRender` hook callback.\n     */\n    __hotInstance.current.addHook('afterViewRender', () => {\n      context.pushCellPortalsIntoPortalManager();\n    });\n\n    __hotInstance.current.init();\n\n    displayAutoSizeWarning(__hotInstance.current);\n\n    if (!displayObsoleteRenderersEditorsWarning(props.children)) {\n      displayChildrenOfTypeWarning(props.children, HotColumn);\n    }\n\n    /**\n     * Destroy the Handsontable instance when the parent component unmounts.\n     */\n    return () => {\n      clearCache();\n      getHotInstance()?.destroy();\n    }\n  }, []);\n\n  /**\n   * Logic performed after the component update.\n   */\n  useUpdateEffect((): void => {\n    clearCache();\n\n    const hotInstance = getHotInstance();\n\n    const newGlobalSettings = createNewGlobalSettings(false, prevProps.current);\n\n    // Update prevProps with the current props\n    prevProps.current = props;\n\n    hotInstance?.updateSettings(newGlobalSettings, false);\n\n    displayAutoSizeWarning(hotInstance);\n    displayObsoleteRenderersEditorsWarning(props.children);\n  });\n\n  /**\n   * Interface exposed to parent components by HotTable instance via React ref\n   */\n  useImperativeHandle(ref, () => ({\n    get hotElementRef() {\n      return hotElementRef.current!;\n    },\n    get hotInstance() {\n      return getHotInstance();\n    }\n  }));\n\n  /**\n   * Render the component.\n   */\n  const hotColumnWrapped = Children.toArray(props.children)\n    .filter(isHotColumn)\n    .map((childNode, columnIndex) => (\n      <HotColumnContextProvider columnIndex={columnIndex}\n                                getOwnerDocument={getOwnerDocument}\n                                key={columnIndex}>\n        {childNode}\n      </HotColumnContextProvider>\n    ));\n\n  const containerProps = getContainerAttributesProps(props);\n  const editorPortal = createEditorPortal(getOwnerDocument(), props.editor);\n\n  return (\n    <Fragment>\n      <div ref={hotElementRef} {...containerProps}>\n        {hotColumnWrapped}\n      </div>\n      <RenderersPortalManager ref={context.setRenderersPortalManagerRef} />\n      <EditorContextProvider hooksRef={globalEditorHooksRef}\n                             hotCustomEditorInstanceRef={globalEditorClassInstance}>\n        {editorPortal}\n      </EditorContextProvider>\n    </Fragment>\n  );\n});\n\n/**\n * Prop types to be checked at runtime.\n */\nHotTableInner.propTypes = {\n  style: PropTypes.object,\n  id: PropTypes.string,\n  className: PropTypes.string\n};\n\nexport default HotTableInner;\nexport { HotTableInner };\n","import React, {\n  ForwardRefExoticComponent,\n  RefAttributes,\n  useId,\n  forwardRef,\n} from 'react';\nimport * as packageJson from '../package.json';\nimport { HotTableInner } from './hotTableInner';\nimport { HotTableProps, HotTableRef } from './types';\nimport { HotTableContextProvider } from './hotTableContext';\n\ninterface Version {\n  version?: string;\n}\n\ntype HotTable = ForwardRefExoticComponent<HotTableProps & RefAttributes<HotTableRef>> & Version;\n\n/**\n * A Handsontable-ReactJS wrapper.\n *\n * To implement, use the `HotTable` tag with properties corresponding to Handsontable options.\n * For example:\n *\n * ```js\n * <HotTable id=\"hot\" data={dataObject} contextMenu={true} colHeaders={true} width={600} height={300} stretchH=\"all\" />\n *\n * // is analogous to\n * let hot = new Handsontable(document.getElementById('hot'), {\n *    data: dataObject,\n *    contextMenu: true,\n *    colHeaders: true,\n *    width: 600\n *    height: 300\n * });\n *\n * ```\n */\nconst HotTable: HotTable = forwardRef<HotTableRef, HotTableProps>(({ children, ...props }, ref) => {\n  const componentId = props.id ?? useId();\n\n  return (\n    <HotTableContextProvider>\n      <HotTableInner id={componentId} {...props} ref={ref}>\n        {children}\n      </HotTableInner>\n    </HotTableContextProvider>\n  );\n})\n\n/**\n * Package version.\n *\n * @returns The version number of the package.\n */\nHotTable.version = (packageJson as any).version;\n\nexport default HotTable;\nexport { HotTable };\n"],"names":["bulkComponentContainer","warn","_console","console","apply","arguments","displayObsoleteRenderersEditorsWarning","children","hasChildElementOfType","type","React","Children","toArray","some","child","props","createEditorPortal","doc","Editor","editorElement","createElement","containerProps","getContainerAttributesProps","className","concat","ReactDOM","createPortal","body","id","Math","random","toString","substring","undefined","style","SettingsMapper","_createClass","_classCallCheck","key","value","properties","_ref","length","_ref$prevProps","prevProps","_ref$isInit","isInit","_ref$initOnlySettingK","initOnlySettingKeys","shouldSkipProp","includes","newSettings","hasOwnProperty","HotTableContext","createContext","HotTableContextProvider","columnsSettings","useRef","setHotColumnSettings","useCallback","columnSettings","columnIndex","current","componentRendererColumns","Map","renderedCellCache","clearRenderedCellCache","clear","portalCache","clearPortalCache","portalContainerCache","getRendererWrapper","Renderer","instance","TD","row","col","prop","cellProperties","instanceGuid","guid","portalContainerKey","portalKey","has","innerHTML","get","getAttribute","cachedPortal","cachedPortalContainer","firstChild","removeChild","appendChild","_createPortal","rElement","ownerDocument","document","cachedContainer","createDocumentFragment","portalContainer","portal","set","renderersPortalManager","setRenderersPortalManagerRef","pmComponent","pushCellPortalsIntoPortalManager","_toConsumableArray","values","contextImpl","useMemo","emitColumnSettings","Provider","useHotTableContext","useContext","HotColumnContext","HotColumnContextProvider","getOwnerDocument","AbstractMethods","ExcludedMethods","MethodsMap","open","close","prepare","focus","makeEditorClass","hooksRef","instanceRef","_Handsontable$editors","CustomEditor","hotInstance","_this","_callSuper","this","Object","getOwnPropertyNames","Handsontable","editors","BaseEditor","prototype","forEach","propName","baseMethod","_hooksRef$current","result","_hooksRef$current$Met","_len","args","Array","_key","call","bind","_inherits","newValue","EditorContext","EditorContextProvider","hotCustomEditorInstanceRef","isHotColumn","childNode","HotColumn","internalProps","_useHotTableContext","_useHotColumnContext","localEditorHooksRef","localEditorClassInstance","useEffect","getSettings","keys","filter","reduce","obj","renderer","hotRenderer","editor","hotEditor","createColumnSettings","editorPortal","RenderersPortalManager","forwardRef","_","ref","_useState2","_slicedToArray","useState","portals","setPortals","useImperativeHandle","Fragment","propTypesModule","exports","ReactPropTypesSecret","ReactPropTypesSecret_1","emptyFunction","emptyFunctionWithReset","resetWarningCache","factoryWithThrowingShims","shim","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$2","HotTableInner","effect","deps","notInitialRender","__hotInstance","hotElementRef","globalEditorHooksRef","globalEditorClassInstance","context","getHotInstance","isDestroyed","isHotInstanceDestroyed","clearCache","window","createNewGlobalSettings","_getHotInstance","init","_initOnlySettings","columns","getRenderer","getEditor","displayAutoSizeWarning","_hotInstance$getPlugi","_hotInstance$getPlugi2","getPlugin","enabled","size","Component","newGlobalSettings","Core","addHook","_getHotInstance2","destroy","updateSettings","hotColumnWrapped","map","assign","propTypes","HotTable","_props$id","_objectWithoutProperties","_excluded","componentId","useId","version","overriddenHooks","_useContext","rerenderTrigger","setRerenderTrigger","_useState4","setEditorValue","deferredValue","useDeferredValue","_objectSpread","onOpen","_hotCustomEditorInsta","_overriddenHooks$onOp","getValue","t","setValue","_hotCustomEditorInsta2","isOpen","_hotCustomEditorInsta3","_hotCustomEditorInsta4","isOpened","finishEditing","_hotCustomEditorInsta5","_hotCustomEditorInsta6","_hotCustomEditorInsta7"],"mappings":"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","x_google_ignoreList":[7,8,9]}